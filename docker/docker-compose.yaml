version: "2.4"
services:
  broker:
    image: confluentinc/cp-kafka:7.3.1.arm64
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'

      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      # KAFKA_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092

      KAFKA_SUPER_USERS: User:admin;User:mds;User:superUser;User:ANONYMOUS
      # KAFKA_LOG4J_LOGGERS: "kafka.authorizer.logger=INFO"
      # KAFKA_LOG4J_ROOT_LOGLEVEL: INFO

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost

      # KAFKA_DELETE_TOPIC_ENABLE: 'true'
      # KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'

      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: true

      # KAFKA_MESSAGE_MAX_BYTES: 10000000
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 400000000
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1.arm64
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  benthos:
    image: jeffail/benthos:4.13
    hostname: benthos
    container_name: benthos
    command: streams
    ports:
      - 4195:4195