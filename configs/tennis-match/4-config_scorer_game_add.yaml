input:
  label: ""
  kafka:
    addresses:
      - broker:29092
    topics: 
      - benthos.stats
    target_version: 3.3.1
    consumer_group: "benthos-scorer-points-33"
    checkpoint_limit: 1024
    start_from_oldest: true

pipeline:
  processors:
    - branch:
        request_map: 'root = this'
        processors:
        - try:
          - cache:
              resource: hot
              operator: get
              key: 'match${! json("match") }-${! json("player") }-game'
          # - mapping: root = if errored() { deleted() }        
        - catch:
          - cache:
              resource: hot
              operator: add
              key: 'match${! json("match.matchId") }-${! json("player") }-games'
              value: 0   
        result_map: 'root.previousScorerGame = this'
    - mapping: |
        root = this
        root.scorerGames.match = root.match
        root.scorerGames.player = root.player
        root.scorerPoints.previousGames = root.previousScorerGame

        let test = "player"
        root.scorerPoints.test = 

        root.scorerPoints.Games = match {
          this.previousScorerGame == 5 => 6,
          this.previousScorerPoints == 15 => 30,
          this.previousScorerPoints == 30 => 40,
          this.previousScorerPoints == 40 => 0
        }
        root = root.scorerPoints
    - cache:
        resource: hot
        operator: set
        key: 'match${! json("match") }-${! json("player") }-points'
        value: '${! json("points") }' 
output:
  switch:
    cases:
      - check: this.previousPoints == 40 && this.points == 0
        output:
          kafka:
            addresses:
            - broker:29092
            topic: 'benthos.game_event'
            target_version: 3.3.1
      - output:
          kafka:
            addresses:
            - broker:29092
            topic: 'benthos.scorer_point'
            target_version: 3.3.1
